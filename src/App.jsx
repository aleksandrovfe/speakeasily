import React, {useState} from 'react'
import './App.css'
import bannerbackground from '/assets/bannerbackground.png'
import girl from '/assets/girl.png'
import hands from '/assets/hands.png'
import logo from '/assets/logo.svg'
import speakAnimation from '/assets/speak.gif'
import '@brainhubeu/react-carousel/lib/style.css';
import {styled} from '@mui/material/styles';
import AddIcCallIcon from '@mui/icons-material/AddIcCall';
import QuizIcon from '@mui/icons-material/Quiz';
import PeopleAltIcon from '@mui/icons-material/PeopleAlt';
import StepConnector, {stepConnectorClasses} from '@mui/material/StepConnector';
import 'pure-react-carousel/dist/react-carousel.es.css';
import {
  Button,
  FormControl,
  FormGroup,
  Input,
  InputLabel,
  ListItemAvatar,
  Modal,
  Snackbar,
  Stack,
  Step,
  StepLabel,
  Stepper,
  Typography
} from "@mui/material";
import {InstagramEmbed} from "react-social-media-embed";
import CountUp from "react-countup";
import ReactStars from "react-rating-stars-component/dist/react-stars.js";
import {Swiper, SwiperSlide} from "swiper/react";
import 'swiper/css';
import 'swiper/css/pagination';
import 'swiper/css/navigation';
import {Navigation, Pagination} from "swiper/modules";

const ColorlibConnector = styled(StepConnector)(({theme}) => ({
  [`&.${stepConnectorClasses.alternativeLabel}`]: {
    top: 22,
  },
  [`&.${stepConnectorClasses.active}`]: {
    [`& .${stepConnectorClasses.line}`]: {
      backgroundImage:
        'linear-gradient(-99deg, #FFA8DC 0%, #40c9ff 98%)',
    },
  },
  [`&.${stepConnectorClasses.completed}`]: {
    [`& .${stepConnectorClasses.line}`]: {
      backgroundImage:
        'linear-gradient(-99deg, #FFA8DC 0%, #40c9ff 98%)',
    },
  },
  [`& .${stepConnectorClasses.line}`]: {
    height: 3,
    border: 0,
    backgroundColor:
      theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',
    borderRadius: 1,
  },
}));

const ColorlibConnecto2 = styled(StepConnector)(({theme}) => ({
  [`&.${stepConnectorClasses.alternativeLabel}`]: {
    top: 22,
  },
  [`&.${stepConnectorClasses.active}`]: {
    [`& .${stepConnectorClasses.line}`]: {
      backgroundImage:
        'linear-gradient(-99deg, #FFA8DC 0%, #40c9ff 98%)',
    },
  },
  [`&.${stepConnectorClasses.completed}`]: {
    [`& .${stepConnectorClasses.line}`]: {
      backgroundImage:
        'linear-gradient(-99deg, #FFA8DC 0%, #40c9ff 98%)',
    },
  },
  [`& .${stepConnectorClasses.line}`]: {
    height: 1,
    border: 20,
    backgroundColor:
      theme.palette.mode === 'dark' ? theme.palette.grey[800] : '#eaeaf0',
    borderRadius: 10,
    width: 5,
    marginLeft: 10
  },
}));

const ColorlibStepIconRoot = styled('div')(({theme, ownerState}) => ({
  backgroundColor: theme.palette.mode === 'dark' ? theme.palette.grey[700] : '#ccc',
  zIndex: 1,
  color: '#fff',
  width: 50,
  height: 50,
  display: 'flex',
  borderRadius: '50%',
  justifyContent: 'center',
  alignItems: 'center',
  ...(ownerState.active && {
    backgroundImage:
      'linear-gradient(-99deg, #FFA8DC 0%, #40c9ff 98%)',
    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',
  }),
  ...(ownerState.completed && {
    backgroundImage:
      'linear-gradient(-99deg, #FFA8DC 0%, #40c9ff 98%)',
  }),
}));


function App() {
  const [name, setName] = useState('')
  const [phone, setPhone] = useState('')
  const [snackMessage, setSnackMessage] = useState('')
  const [openSnack, setOpenSnack] = useState(false)
  const [snackMessageStatus, setSnackMessageStatus] = useState('')

  const handleCloseSnack = () => {
    setOpenSnack(false);
  };

  function ColorlibStepIcon(props) {
    const {active, completed, className} = props;

    const icons = {
      1: <AddIcCallIcon/>,
      2: <QuizIcon/>,
      3: <PeopleAltIcon/>,
    };

    return (
      <ColorlibStepIconRoot ownerState={{completed, active}} className={className}>
        {icons[String(props.icon)]}
      </ColorlibStepIconRoot>
    );
  }

  const isStepFailed = (step) => {
    return step === 1;
  };

  const steps = ['–°–≤—è–∂–∏—Å—å –∑ –Ω–∞–º–∏', '–ü—Ä–æ–π–¥–∏ –Ω–µ–≤–µ–ª–∏—á–∫–∏–π —Ç–µ—Å—Ç', '–ü–æ–∑–Ω–∞–π–æ–º—Å—è –∑ –≤—á–∏—Ç–µ–ª–µ–º —Ç–∞ –≤–∏–∑–Ω–∞—á —Å–≤–æ—ó –ø–æ—Ç—Ä–µ–±–∏ —É –Ω–∞–≤—á–∞–Ω–Ω—ñ'];

  const handleSubmit = async (event) => {
    if (!name || !phone) {
      setSnackMessage('–©–æ–± –∑–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É, –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥–∞–π—Ç–µ –≤–∞—à–µ —ñ–º\'—è —Ç–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É');
      setSnackMessageStatus('error')
      setOpenSnack(true);
    } else {
      const url = `https://api.telegram.org/bot6382498664:AAHkW6xvQhXqJVlOxHnT6HGgl6NZlBNUk5Q/sendMessage?chat_id=-1001954943934&text=<b>${name}</b>%20<i>${phone}</i>&parse_mode=html`;

      try {
        const resp = await fetch(url, {
          method: "POST", // *GET, POST, PUT, DELETE, etc.
        })

        const data = await resp.json();

        console.log('data resp', data)
        setSnackMessage(`–î—è–∫—É—î–º–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É, ${name}! –ú–∏ —Ä–∞–¥—ñ, —â–æ –≤–∏ –∑ –Ω–∞–º–∏. –ù–∞—à –≤—á–∏—Ç–µ–ª—å –∑–≤\'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–µ–∑–∞–±–∞—Ä–æ–º. –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –∑–≤\'—è–∑–æ–∫ —Ç–∞ –ø—Ä–∏—î–º–Ω–æ–≥–æ –¥–Ω—è! üòä`);
        setSnackMessageStatus('success')
        setOpenSnack(true);
      } catch (e) {
        console.log(e)
      }
    }
  }


  const renderForm = () => {
    return (
      <FormGroup className="form">
        <FormControl>
          <InputLabel htmlFor="my-input">–Ü–º'—è</InputLabel>
          <Input
            onChange={(event) => setName(event.target.value)}
            name={'name'} variant="filled" className="form__input" id="my-input"
            aria-describedby="my-helper-text"/>
        </FormControl>
        <FormControl>
          <InputLabel htmlFor="my-input">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É / –¢–µ–ª–µ–≥—Ä–∞–º –Ω—ñ–∫</InputLabel>
          <Input
            onChange={(event) => setPhone(event.target.value)}
            name={'phone'} variant="filled" className="form__input" id="my-input"
            aria-describedby="my-helper-text"/>
        </FormControl>
        <FormControl>
          <Button onClick={handleSubmit} className="form__submit">–ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É</Button>
        </FormControl>
      </FormGroup>
    )
  }

  const [open, setOpen] = useState(false)

  return (
    <>
      <div className="App">
        <Modal
            open={open}
            onClose={() => setOpen(false)}
            aria-labelledby="modal-modal-title"
            aria-describedby="modal-modal-description"
        >
          <div className="modal-container">
            <div className="modal-container__form">
              {renderForm()}
            </div>
          </div>
        </Modal>
        <Snackbar
            className={`snack-container ${snackMessageStatus === 'success' && 'snack-container__success'} ${snackMessageStatus === 'error' && 'snack-container__error'}`}
            anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}
            open={openSnack}
            onClose={handleCloseSnack}
            message={snackMessage}
            key={'top' + 'right'}
        />
        {/*<div className="btns-menu">*/}
        {/*  <a href="https://www.instagram.com/" target="_blank">*/}
        {/*    <img className="contact-icon" src={inst} alt=""/>*/}
        {/*  </a>*/}
        {/*  <a href="https://www.instagram.com/" target="_blank">*/}
        {/*    <img className="contact-icon" src={tele} alt=""/>*/}
        {/*  </a>*/}
        {/*  <a href="https://www.instagram.com/" target="_blank">*/}
        {/*    <img className="contact-icon" src={gmail} alt=""/>*/}
        {/*  </a>*/}
        {/*</div>*/}

        <div className="header">
          <div className="header__container">
            {/*<img className="banner" src={banner} alt="banner"/>*/}
            <img className="banner" src={bannerbackground} alt="banner"/>
            <img className="girl" src={girl} alt="banner"/>
            <img className="hands" src={hands} alt="banner"/>
            <img className="logo" src={logo} alt="logo"/>
          </div>
        </div>

        <div className="body">
          <div className="container container--mini-margin merged-section">
            <div className="course-container">
              <div className="course-box">
                <div className="course-box__visible">
                  <p className="course-box__title">Easy –≥—Ä—É–ø–∏</p>
                  <p>250 –≥—Ä–Ω –∑–∞ 80 —Ö–≤–∏–ª–∏–Ω</p>
                </div>
                <div className="course-box__invisible">
                  <p className="">–î–æ 5 —É—á–Ω—ñ–≤ –≤ –≥—Ä—É–ø—ñ –ú–æ—Ç–∏–≤—É—é—á–∞ —Ç–∞ –≤–µ—Å–µ–ª–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞</p>
                </div>
              </div>
              <div className="course-box">
                <div className="course-box__visible course-box__visible-ind">
                  <p className="course-box__title">Easy —ñ–Ω–¥–∏–≤–∏</p>
                  <p>350 –≥—Ä–Ω –∑–∞ 60 —Ö–≤–∏–ª–∏–Ω</p>
                </div>
                <div className="course-box__invisible">
                  <p className="">–ó–∞ —Ç–≤–æ—ó–º —Ä–æ–∑–∫–ª–∞–¥–æ–º –¢–≤–æ—ó –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ —Ü—ñ–ª—ñ</p>
                </div>
              </div>
              <div className="course-box">
                <div className="course-box__visible course-box__visible-sc">
                  <p className="course-box__title">Speaking club</p>
                  <p>180 –≥—Ä–Ω –∑–∞ 60 —Ö–≤–∏–ª–∏–Ω</p>
                </div>
                <div className="course-box__invisible">
                  <p className="">–°—É—Ç–æ —Ä–æ–∑–º–æ–≤–∏ –Ω–∞ –∫–∞–π—Ñ–æ–≤—ñ —Ç–µ–º–∏</p>
                </div>
              </div>
            </div>

            <div className="form__container">
              {renderForm()}
              <div className="counter-container">
                <h5 className="sub-title sub-title__margin">–ë–∞–≥–∞—Ç–æ —â–∞—Å–ª—ã–≤–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤</h5>
                <CountUp
                    enableScrollSpy={true}
                    className="counter"
                    start={0}
                    end={3953}
                    duration={2.75}
                    separator=""
                    decimal=""
                    onEnd={() => console.log('Ended! üëè')}
                    onStart={() => console.log('Started! üí®')}
                />
              </div>
            </div>
          </div>

          <div className="container container--no-padding container--margin-mini">
            <h3 className="sub-title">–ú–∏ –≤–∏–≥–æ–≤–æ—Ä–∏–º–æ —Ç–≤–æ—é –∞–Ω–≥–ª—ñ–π—Å—å–∫—É! –ë–æ</h3>
            <div className="container--flex-row">
              <div className="container--flex container--flex-margin choose__descktop">
                <div className="container__box container__pink container__box--smaller ">
                  <ListItemAvatar>
                    <img className="emoji" src={speakAnimation} alt=""/>
                  </ListItemAvatar>
                  <p className="text">–ù–∞—à—ñ —É—á–Ω—ñ —Ä–æ–∑–º–æ–≤–ª—è—é—Ç—å –±—ñ–ª—å—à—É —á–∞—Å—Ç–∏–Ω—É —É—Ä–æ–∫—É</p>
                </div>
                <div className="container__box container__pink container__box--smaller ">
                  <ListItemAvatar>
                    <p className="emoji">&#127881;</p>
                  </ListItemAvatar>
                  <p className="text">–í—á–∏–º–æ—Å—è —Å–º—ñ—é—á–∏—Å—å —Ç–∞ –æ–±–≥–æ–≤–æ—Ä—é—é—á–∏ —â–æ—Å—å –∫—É–º–µ–¥–Ω–µ</p>
                </div>
                <div className="container__box container__pink container__box--smaller ">
                  <ListItemAvatar>
                    <p className="emoji">&#128540;</p>
                  </ListItemAvatar>
                  <p className="text text--center">
                    –ù–µ –Ω—É–¥—å–≥—É—î–º–æ –Ω–∞–¥ –ø–∏—Å—å–º–æ–≤–æ—é –≥—Ä–∞–º–∞—Ç–∏–∫–æ—é - –±–æ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É –∂–∏—Ç—Ç—ñ —Ç–∏ –∂ –Ω–µ –±—É–¥–µ—à –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏
                    —Å–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫—É –∑–∞–≤–¥—è–Ω–Ω—è –∑ Past Simple
                  </p>
                </div>
              </div>
              <div className="bubble-image__wrapper">
                <img
                    className="bubble-image"
                    src="https://images.pexels.com/photos/3768146/pexels-photo-3768146.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1"
                    alt=""/>
              </div>
            </div>

          </div>
          <div className="container">
            <h3 className="sub-title sub-title__margin">EASY –°–¢–ê–†–¢</h3>
            <div className="container--flex-row container--start">
              <div className="start-image__wrapper">
                <img
                    className="start-image"
                    src="https://images.pexels.com/photos/3321793/pexels-photo-3321793.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1"
                    alt=""/>
              </div>
              <div className="steps__descktop container__blue">
                <Stack sx={{width: '100%'}} spacing={4}>
                  <Stepper activeStep={2} alternativeLabel connector={<ColorlibConnector/>}>
                    {steps.map((label) => (
                        <Step key={label}>
                          <StepLabel
                              className="step__label"
                              StepIconComponent={ColorlibStepIcon}
                          >
                            {label}
                          </StepLabel>
                        </Step>
                    ))}
                  </Stepper>
                </Stack>
              </div>
            </div>

            <div className="steps__mobile">
              <Stepper
                  orientation="vertical"
                  activeStep={3}
                  connector={<ColorlibConnecto2/>}
              >
                {steps.map((label, index) => {
                  const labelProps = {};
                  if (isStepFailed(index)) {
                    labelProps.optional = (
                        <Typography variant="caption" color="error">
                          Alert message
                        </Typography>
                    );
                  }

                  return (
                      <Step key={label}>
                        <StepLabel
                            className="step__label"
                            StepIconComponent={ColorlibStepIcon}
                        >
                          {label}
                        </StepLabel>
                      </Step>
                  );
                })}
              </Stepper>
            </div>
          </div>
          <div className="container__no--glass">
            <div className="choose__mobile">
              {/*<CarouselProvider*/}
              {/*  naturalSlideWidth={100}*/}
              {/*  naturalSlideHeight={60}*/}
              {/*  totalSlides={3}*/}
              {/*  className="container__carousel"*/}
              {/*>*/}
              {/*  <Slider>*/}
              {/*    <Slide index={0}>*/}
              {/*      <div className="container__box container__pink">*/}
              {/*        <h5>Easy –≥—Ä—É–ø–∏</h5>*/}
              {/*        <p className="text">–î–æ 5 —É—á–Ω—ñ–≤ –≤ –≥—Ä—É–ø—ñ</p>*/}
              {/*        <p className="text">–ú–æ—Ç–∏–≤—É—é—á–∞ —Ç–∞ –≤–µ—Å–µ–ª–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞</p>*/}
              {/*        <p className="text">80 —Ö–≤–∏–ª–∏–Ω</p>*/}
              {/*        <p className="text">250 –≥—Ä–Ω</p>*/}
              {/*      </div>*/}
              {/*    </Slide>*/}
              {/*    <Slide index={1}>*/}
              {/*      <div className="container__box container__pink">*/}
              {/*        <h5>Easy —ñ–Ω–¥–∏–≤–∏</h5>*/}
              {/*        <p className="text">–ó–∞ —Ç–≤–æ—ó–º —Ä–æ–∑–∫–ª–∞–¥–æ–º</p>*/}
              {/*        <p className="text">–¢–≤–æ—ó –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ —Ü—ñ–ª—ñ</p>*/}
              {/*        <p className="text">60 —Ö–≤–∏–ª–∏–Ω</p>*/}
              {/*        <p className="text">350 –≥—Ä–Ω</p>*/}
              {/*      </div>*/}
              {/*    </Slide>*/}
              {/*    <Slide index={2}>*/}
              {/*      <div className="container__box container__pink">*/}
              {/*        <h5>–ù–∞–π–∫–æ–º–æ—Ñ—Ä—Ç–Ω—ñ—à–∏–π speaking club</h5>*/}
              {/*        <p className="text text--center">60 —Ö–≤–∏–ª–∏–Ω —Å—É—Ç–æ —Ä–æ–∑–º–æ–≤ –Ω–∞ –∫–∞–π—Ñ–æ–≤—ñ —Ç–µ–º–∏</p>*/}
              {/*        <p className="text">180 –≥—Ä–Ω</p>*/}
              {/*      </div>*/}
              {/*    </Slide>*/}
              {/*  </Slider>*/}
              {/*</CarouselProvider>*/}
            </div>
            {/*<div className="container--flex container--flex-margin choose__descktop">*/}
            {/*  <div className="container__box container__purple">*/}
            {/*    <h5>Easy –≥—Ä—É–ø–∏</h5>*/}
            {/*    <p className="text">–î–æ 5 —É—á–Ω—ñ–≤ –≤ –≥—Ä—É–ø—ñ</p>*/}
            {/*    <p className="text">–ú–æ—Ç–∏–≤—É—é—á–∞ —Ç–∞ –≤–µ—Å–µ–ª–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞</p>*/}
            {/*    <p className="text">80 —Ö–≤–∏–ª–∏–Ω</p>*/}
            {/*    <p className="text">250 –≥—Ä–Ω</p>*/}
            {/*  </div>*/}
            {/*  <div className="container__box container__purple">*/}
            {/*    <h5>Easy —ñ–Ω–¥–∏–≤–∏</h5>*/}
            {/*    <p className="text">–ó–∞ —Ç–≤–æ—ó–º —Ä–æ–∑–∫–ª–∞–¥–æ–º</p>*/}
            {/*    <p className="text">–¢–≤–æ—ó –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ —Ü—ñ–ª—ñ</p>*/}
            {/*    <p className="text">60 —Ö–≤–∏–ª–∏–Ω</p>*/}
            {/*    <p className="text">350 –≥—Ä–Ω</p>*/}
            {/*  </div>*/}
            {/*  <div className="container__box container__purple">*/}
            {/*    <h5>–ù–∞–π–∫–æ–º–æ—Ñ—Ä—Ç–Ω—ñ—à–∏–π speaking club</h5>*/}
            {/*    <p className="text text--center">60 —Ö–≤–∏–ª–∏–Ω —Å—É—Ç–æ —Ä–æ–∑–º–æ–≤ –Ω–∞ –∫–∞–π—Ñ–æ–≤—ñ —Ç–µ–º–∏</p>*/}
            {/*    <p className="text">180 –≥—Ä–Ω</p>*/}
            {/*  </div>*/}
            {/*</div>*/}
          </div>
        </div>
        <div>
          <div className="container">
            <h3 className="sub-title">–©–æ –ø—Ä–æ –Ω–∞—Å –∫–∞–∂—É—Ç—å</h3>
            <Swiper
                navigation={true}
                modules={[Pagination, Navigation]}
                className="mySwiper"
            >
              <SwiperSlide>
                <p className="review__text">
                  <ReactStars
                      count={5}
                      value={5}
                      size={24}
                      edit={false}
                      activeColor="#ffd700"
                  />
                  "–Ø –Ω–∞—Ä–µ—à—Ç—ñ –∑–Ω–∞–π—à–ª–∞ —Å–æ–±—ñ —ñ–¥–µ–∞–ª—å–Ω–∏–π —Å–ø–æ—Å—ñ–± –∑–∞–Ω—è—Ç—å –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é - –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏—Ç—Ä–∞—á–∞—Ç–∏ —á–∞—Å –Ω–∞ –¥–æ—Ä–æ–≥—É, —ñ –Ω–∞–≤—ñ—Ç—å
                  –±—ñ–ª—å—à–µ - –º–æ–∂–Ω–∞ –≤–∏–¥—ñ–ª–∏—Ç–∏ –Ω–∞ —Ü–µ —Ä–æ–±–æ—á—É –ø–µ—Ä–µ—Ä–≤—É. –ó–∞–Ω—è—Ç—Ç—è –∑ –º–æ—ó–º –≤–∏–∫–ª–∞–¥–∞—á–µ–º ‚Äì —Ü–µ –∑–∞–≤–∂–¥–∏ —Ü—ñ–∫–∞–≤–æ, –ø—ñ–∑–Ω–∞–≤–∞–ª—å–Ω–æ,
                  –≤–µ—Å–µ–ª–æ —Ç–∞ –¥—É–∂–µ –¥—É—à–µ–≤–Ω–æ. –£—Ä–æ–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω–æ, –≤—á–∏—Ç–µ–ª—å –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ –≤—Å—ñ –ø–∏—Ç–∞–Ω–Ω—è —Ç–∞
                  –ø–æ—Å—Ç—ñ–π–Ω–æ —á–µ—Ä–≥—É—î –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ. –Ü –Ω–∞–π–≤–∞–∂–ª–∏–≤—ñ—à–µ –¥–ª—è –º–µ–Ω–µ ‚Äì —è –±–∞—á—É –ø—Ä–æ–≥—Ä–µ—Å:)"
                </p>
              </SwiperSlide>
              <SwiperSlide>
                <p className="review__text">
                  <ReactStars
                      count={5}
                      value={5}
                      size={24}
                      edit={false}
                      activeColor="#ffd700"
                  />
                  "–ß—É–¥–æ–≤–∞ —à–∫–æ–ª–∞ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó!! –û–Ω–ª–∞–π–Ω –∑–∞–Ω—è—Ç—Ç—è –¥—É–∂–µ –∑—Ä—É—á–Ω–æ, –æ—Å–æ–±–ª–∏–≤–æ –∫–æ–ª–∏ –≤—ñ–ª—å–Ω–æ–≥–æ —á–∞—Å—É –Ω–µ —Ç–∞–∫ –±–∞–≥–∞—Ç–æ. –ó
                  –≤–∏–∫–ª–∞–¥–∞—á–µ–º —É—Ä–æ–∫–∏ –≤—ñ–¥–±—É–≤–∞—é—Ç—å—Å—è –Ω–∞ –æ–¥–Ω–æ–º—É –ø–æ–¥–∏—Ö—É, –¥—É–∂–µ —Ü—ñ–∫–∞–≤–æ —Ç–∞ –∑ –≥–∞—Ä–Ω–∏–º –Ω–∞—Å—Ç—Ä–æ—î–º. –í–∏—è–≤–ª—è—î—Ç—å—Å—è –∞–Ω–≥–ª—ñ–π—Å—å–∫—É
                  –º–æ–∂–Ω–∞ –≤—á–∏—Ç–∏ –ª–µ–≥–∫–æ —Ç–∞ —ñ–∑ –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è–º!"
                </p>
              </SwiperSlide>
              <SwiperSlide>
                <p className="review__text">
                  <ReactStars
                      count={5}
                      value={5}
                      size={24}
                      edit={false}
                      activeColor="#ffd700"
                  />
                  "–î—É–∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é! –µ–∫–æ–Ω–æ–º—ñ—è —á–∞—Å—É —Ç–∞ –Ω–µ—Ä–≤—ñ–≤ - –Ω–∞–≤—á–∞–Ω–Ω—è –ø–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∑—ñ Speak Easily. –í –º–µ–Ω–µ —á—É–¥–æ–≤–∏–π –ø–µ–¥–∞–≥–æ–≥
                  —Ç–∞ —á—É–¥–æ–≤–∏–π —Å–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫! –¶—ñ–∫–∞–≤–∞ –ø—Ä–æ–≥—Ä–∞–º–∞, —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ —Ç–∞ –¥–æ–ø–æ–º–æ–≥–∞ —É –≤—Å—ñ—Ö –ø–∏—Ç–∞–Ω–Ω—è—Ö, –Ω–∞–≤—á–∞–Ω–Ω—è —ñ–∑
                  –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è–º! –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –∑–º—É—Å–∏—Ç—å —Å–µ–±–µ —á–µ–∫–∞—Ç–∏! No doubt!"
                </p>
              </SwiperSlide>
              <SwiperSlide>
                <p className="review__text">
                  <ReactStars
                      count={5}
                      value={5}
                      size={24}
                      edit={false}
                      activeColor="#ffd700"
                  />
                  "–ó–∞–π–º–∞—é—Å—å –¥—Ä—É–≥–∏–π –º—ñ—Å—è—Ü—å –æ–Ω–ª–∞–π–Ω, –¥—É–∂–µ –∑—Ä—É—á–Ω–æ, –≤–∏–∫–ª–∞–¥–∞—á –∫–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π, —Ü—ñ–∫–∞–≤—ñ –∑–∞–Ω—è—Ç—Ç—è, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ñ–¥
                  –Ω–∞–≤—á–∞–Ω–Ω—è –≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è –º–∏—Ç—Ç—î–≤–æ!))"</p>
              </SwiperSlide>
            </Swiper>
          </div>
        </div>
      </div>
      <div className="insta-container">
        <InstagramEmbed
            url="https://www.instagram.com/reel/C3Z7MxNtDD2/?igsh=MTdmeHppcjB2ZHAxdA=="
            height={'100%'}
        />
        <InstagramEmbed
            url="https://www.instagram.com/p/C2__aDntt1N/?igsh=MXNud20yZDdiOTdwdQ=="
            height={'100%'}
        />
        <InstagramEmbed
            url="https://www.instagram.com/p/C1_mpY5t4MK/?igsh=a2swOG4xNGcyNXE5"
            height={'100%'}
        />
      </div>
    </>
  )
}

export default App
